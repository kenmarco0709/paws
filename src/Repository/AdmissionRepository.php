<?php

namespace App\Repository;

use App\Entity\AdmissionEntity;

/**
 * AdmissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdmissionRepository extends \Doctrine\ORM\EntityRepository
{

    public function validate($admission_form) {

        $errors = array();

        $action = $admission_form['action'];

        // d = delete
        if(!in_array($admission_form['action'], ['c', 'nm' , 'd', 'u', 'pb']) ) {
            
            if(empty($admission_form['admission_type'])){
                $errors[] = 'Please select a admission type';
            }

            if(empty($admission_form['client'])){
                $errors[] = 'Please select a client';
            }
            if(!isset($admission_form['admission_pets']) || !count($admission_form['admission_pets'])){

                $errors[] = 'Please choose atleast 1 pet';
            }
        } else {

            if($action != 'd'){
                if(empty($admission_form['attending_vet'])){
                    $errors[] = 'Please choose a Attending Vet.';
                }
                

            }
        }

        return $errors;
    }

    public function ajax_list(array $get, $userData){

        if(isset($get['type']) && !empty($get['type'])){
          
            $columns = array(
                array('a.`id`', "a.`id`"),
                array("CONCAT(c.`first_name`, ' ', c.`last_name`)", "CONCAT(c.`first_name`, ' ', c.`last_name`)", 'client'),
                array('a.`status`', "a.`status`", "status"),
                array("CONCAT(app.petName, ':' ,app.petId )", "CONCAT(app.petName, ':' ,app.petId )", 'petName'),
                array('DATE_FORMAT(a.`created_at`, "%m/%d/%Y")', 'DATE_FORMAT(a.`created_at`, "%m/%d/%Y")', 'admissionDate'),
                array('a.`id`', "a.`id`", "aId"),
                array('c.`id`', "c.`id`", "clientId"),
    
            );
        } else {

            $columns = array(
                array('a.`id`', "a.`id`"),
                array('at.`description`', "at.`description`", "admissionType"),
                array("CONCAT(c.`first_name`, ' ', c.`last_name`)", "CONCAT(c.`first_name`, ' ', c.`last_name`)", 'client'),
                array("c.`contact_no`", "c.`contact_no`", 'contactNo'),
                array('a.`status`', "a.`status`", "status"),
                array("CONCAT(app.petName, ':' ,app.petId )", "CONCAT(app.petName, ':' ,app.petId )", 'petName'),
                array('DATE_FORMAT(a.`created_at`, "%m/%d/%Y")', 'DATE_FORMAT(a.`created_at`, "%m/%d/%Y")', 'admissionDate'),
                array('a.`id`', "a.`id`", "aId"),
                array('c.`id`', "c.`id`", "clientId"),
    
            );
        }

      
        $asColumns = array();
        $select = "SELECT";
        $from = "FROM `admission` a";
        $sqlWhere = " WHERE a.`is_deleted` = 0";
        $sqlWhere .= " AND a.`status` != 'Is Confined'";
        $joins = " LEFT JOIN `client` c ON c.`id` = a.`client_id`";
        $joins .= " LEFT JOIN `admission_type` at ON at.`id` = a.`admission_type_id`";
        $joins .= " LEFT JOIN (
                        SELECT
                            GROUP_CONCAT(p.`name` SEPARATOR '|') AS petName,    
                            GROUP_CONCAT(p.`id` SEPARATOR '|') AS petId,
                            ap.`admission_id`
                        FROM `admission_pet` ap
                        LEFT JOIN `pet` p ON ap.`pet_id` = p.`id` 
                        GROUP BY ap.`admission_id`
                )  app ON app.`admission_id` = a.`id`";

        $groupBy = "";
        $orderBy = "";
        $limit = "";
        $stmtParams = array();

        if(isset($get['type']) && !empty($get['type'])){
            $sqlWhere .= " AND at.`description` = 'Confinement'";
        }

        foreach($columns as $key => $column) {
            $select .= ($key > 0 ? ', ' : ' ') . $column[1] . (isset($column[2]) ? ' AS ' . $column[2] : '');
        }


        if($userData['type'] != 'Super Admin' || $userData['branchId']){

            $sqlWhere .= " AND c.`branch_id` = :branchId";
            $stmtParams['branchId'] = $userData['branchId'];
        }

        /*
         * Ordering
         */
        foreach($get['columns'] as $key => $column) {
            if($column['orderable']=='true') {
                if(isSet($get['order'])) {
                    foreach($get['order'] as $order) {
                        if($order['column']==$key) {
                            $orderBy .= (!empty($orderBy) ? ', ' : 'ORDER BY ') . $columns[$key][0] . (!empty($order['dir']) ? ' ' . $order['dir'] : '');
                        }
                    }
                }
            }
        }

        /*
         * Filtering
         */
        if(isset($get['search']) && $get['search']['value'] != ''){
            $aLikes = array();
            foreach($get['columns'] as $key => $column) {
                if($column['searchable']=='true') {
                    $aLikes[] = $columns[$key][0] . ' LIKE :searchValue';
                }
            }
            foreach($asColumns as $asColumn) {
                $aLikes[] = $asColumn . ' LIKE :searchValue';
            }
            if(count($aLikes)) {
                $sqlWhere .= (!empty($sqlWhere) ? ' AND ' : 'WHERE ') . '(' . implode(' OR ', $aLikes) . ')';
                $stmtParams['searchValue'] = "%" . $get['search']['value'] . "%";
            }
        }

        /* Set Limit and Length */
        if(isset( $get['start'] ) && $get['length'] != '-1'){
            $limit = 'LIMIT ' . (int)$get['start'] . ',' . (int)$get['length'];
        }

        $sql = "$select $from $joins $sqlWhere $groupBy $orderBy";
        $query = $this->getEntityManager()->getConnection()->prepare($sql);
     

        foreach($stmtParams as $k => $v){
            $query->bindValue($k, $v);

        }
        $res = $query->executeQuery();
        $result_count = $res->fetchAllAssociative();
        $sql = "$select $from $joins $sqlWhere $groupBy $orderBy $limit";
        $query = $this->getEntityManager()->getConnection()->prepare($sql);
        foreach($stmtParams as $k => $v){
            $query->bindValue($k, $v);

        }
        $res = $query->executeQuery();
        $result = $res->fetchAllAssociative();

        /* Data Count */
        $recordsTotal = count($result_count);

        /*
         * Output
         */
        $output = array(
            "draw" => intval($get['draw']),
            "recordsTotal" => $recordsTotal,
            "recordsFiltered" => $recordsTotal,
            "data" => array()
        );

        $url = $get['url'];
        $formUrl = '';
        $hasUpdate = false;
        if($userData['type'] == 'Super Admin'  || in_array('Admission Update', $userData['accesses'])){

            $formUrl = $url . 'admission/form';  
            $hasUpdate = true;
        }

        foreach($result as $row) {

            $id2 = base64_encode($row['aId']);
            $pet = "";

            if($row['petName']){
                
                $petNameDatas = explode(":", $row['petName']);
                $names = explode("|" , $petNameDatas[0]);
                $ids = explode("|",$petNameDatas[1]);

                $idsCtr = count($ids);
                foreach($ids as $k => $id){
                    $pet.= '<a href="'.$url.'pet/details/'.base64_encode($id).'" value="'.$id.'" class="ml-1" >'.$names[$k].'</a>' . (($idsCtr - 1  > $k) ? ", " : "" );
                }
                
            }

            $action = $hasUpdate ? "<a class='action-button-style btn btn-primary table-btn' href='$formUrl/u/$id2'>Update</a>" : "";
            if(isset($get['type']) && !empty($get['type'])){
               
                $values = array(
                    $row['id'],
                    $row['client'],
                    $row['status'],
                    $pet,
                    $row['admissionDate'],
                    $action,
                );
            } else {
                $values = array(
                    $row['id'],
                    $row['admissionType'],
                    $row['client'],
                    $row['contactNo'],
                    $row['status'],
                    $pet,
                    $row['admissionDate'],
                    $action,
                );
            }
         

            $output['data'][] = $values;
        }

        unset($result);

        return $output;
    }


}
